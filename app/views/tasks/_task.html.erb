<%
  is_completed = task.completed?
  # CComponent classes defined in CSS
  task_container_classes = "task-container"
  task_container_classes += " opacity-60" if is_completed

  task_title_classes = "task-title"
  task_title_classes += " line-through" if is_completed

  task_description_classes = "task-description"
  task_description_classes += " line-through" if is_completed
%>
<%= content_tag :div,
    id: dom_id(task),
    class: task_container_classes,
    data: {
      controller: "task-card",
      action: "click->task-card#select",
      "task-card-active-class": "active"
    } do %>

  <div class="flex justify-between items-start">
    <div class="flex-grow">
      <div data-controller="inline-edit" data-inline-edit-url-value="<%= task_path(task) %>" data-inline-edit-attribute-value="title" data-inline-edit-object-name-value="task" data-inline-edit-start-editing-value="<%= local_assigns.fetch(:start_editing_title, false) %>" class="w-full">
        
        <%= button_to complete_task_path(task),
              method: :patch,
              "data-turbo-stream": true,
              class: "float-left mr-4 mt-1.5 border-none bg-transparent p-0 cursor-pointer" do %>
          <div class="task-checkbox <%= 'checked' if is_completed %>">
            <% if is_completed %>
              <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="3">
                <path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7" />
              </svg>
            <% end %>
          </div>
        <% end %>
        
        <h3 data-inline-edit-target="display" data-action="click->inline-edit#edit" class="<%= task_title_classes %>"><%= task.title %></h3>
        <%= text_field_tag 'task[title]', task.title, data: { inline_edit_target: "input", action: "blur->inline-edit#save keydown.enter->inline-edit#save keydown.esc->inline-edit#cancel" }, class: "hidden w-full task-title" %>
      </div>
    </div>

    <div class="relative ml-2 flex-shrink-0"
         data-controller="dropdown"
         data-action="click@window->dropdown#hide"
         data-dropdown-hidden-class="hidden">
      <button type="button" class="p-1 rounded-full text-gray-400 hover:bg-gray-100 hover:text-gray-600" data-action="dropdown#toggle">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
          <path d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z" />
        </svg>
      </button>
      <div data-dropdown-target="menu" class="hidden absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg z-10 border">
        <div class="py-1">
          <%= button_to t("tasks.delete-task"), task_path(task),
                method: :delete,
                class: "block w-full text-left px-4 py-2 text-sm text-red-700 hover:bg-red-50",
                data: { turbo_confirm: "Tem certeza que deseja excluir esta tarefa?" } %>
        </div>
      </div>
    </div>
  </div>

  <div class="flex-grow">
    <div data-controller="inline-edit" data-inline-edit-url-value="<%= task_path(task) %>" data-inline-edit-attribute-value="description" data-inline-edit-object-name-value="task" class="w-full mt-1">
      <p data-inline-edit-target="display" data-action="click->inline-edit#edit" class="<%= task_description_classes %>"><%= task.description.presence || t("tasks.default-description") %></p>
      <%= text_area_tag 'task[description]', task.description, data: { inline_edit_target: "textarea", action: "blur->inline-edit#save keydown.esc->inline-edit#cancel" }, class: "hidden w-full task-description border-gray-300 rounded-md", rows: 2 %>
    </div>
  </div>

  <div class="mt-3 flex items-center flex-wrap gap-2">
    <% if task.due_date.present? %>
      <div class="relative group flex items-center gap-x-1.5 bg-gray-100 text-gray-800 text-xs font-medium pl-2.5 pr-3 py-1 rounded-full">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-3.5 w-3.5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" /></svg>
        <span><%= l(task.due_date, format: :short) rescue task.due_date.to_s %></span>
        <%= button_to task_path(task, task: { due_date: nil }), method: :patch, class: "task-badge-remove-icon", data: { "task-card-target": "removeIcon" } do %>
          &times;
        <% end %>
      </div>
    <% end %>
    <% if task.priority.present? %>
      <% priority_classes = { low: "bg-blue-100 text-blue-800", medium: "bg-yellow-100 text-yellow-800", high: "bg-red-100 text-red-800" }.fetch(task.priority.to_sym) %>
      <div class="relative group flex items-center gap-x-1.5 <%= priority_classes %> text-xs font-medium pl-2.5 pr-3 py-1 rounded-full">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-3.5 w-3.5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M3 3v18h18" /><path stroke-linecap="round" stroke-linejoin="round" d="M7 15l4-4 4 4 4-4" /></svg>
        <span><%= t("tasks.priorities.#{task.priority}") %></span>
        <%= button_to task_path(task, task: { priority: nil }), method: :patch, class: "task-badge-remove-icon", data: { "task-card-target": "removeIcon" } do %>
          &times;
        <% end %>
      </div>
    <% end %>
  </div>

  <div data-task-card-target="options" class="hidden pt-2 mt-2 border-t border-gray-100">
    <div class="flex items-center gap-2">
      <% if task.due_date.blank? %>
        <div class="relative">
          <button data-action="click->task-card#showAddDateForm" data-task-card-target="addDateButton" title="Adicionar data" class="p-1.5 rounded-full hover:bg-gray-200">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" /></svg>
          </button>
          <%= form_with model: task, url: task_path(task), method: :patch,
                class: "hidden items-center gap-2",
                data: { "task-card-target": "addDateForm" } do |f| %>
            <%= f.date_field :due_date, class: "border-gray-300 rounded-md text-sm p-1 w-36" %>
            <%= f.submit "Salvar", class: "bg-blue-600 text-white text-xs font-bold py-1.5 px-3 rounded-md hover:bg-blue-700" %>
          <% end %>
        </div>
      <% end %>
      <% if task.priority.blank? %>
        <div class="relative">
          <button data-action="click->task-card#showAddPriorityForm" data-task-card-target="addPriorityButton" title="Adicionar prioridade" class="p-1.5 rounded-full hover:bg-gray-200">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M3 3v18h18" /><path stroke-linecap="round" stroke-linejoin="round" d="M7 15l4-4 4 4 4-4" /></svg>
          </button>
          <%= form_with model: task, url: task_path(task), method: :patch,
                class: "hidden items-center gap-2",
                data: { "task-card-target": "addPriorityForm" } do |f| %>
            <%= f.select :priority, Task.priorities.keys.map { |p| [t("tasks.priorities.#{p}"), p] }, {}, { class: "border-gray-300 rounded-md text-sm p-1" } %>
            <%= f.submit "Salvar", class: "bg-blue-600 text-white text-xs font-bold py-1.5 px-3 rounded-md hover:bg-blue-700" %>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
<% end %>
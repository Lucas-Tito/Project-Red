ARG RUBY_VERSION=3.4.4 # Should be the same as .ruby-version
FROM ruby:$RUBY_VERSION-slim

# Enverioment variables
ENV RAILS_ENV=development \
    APP_HOME=/rails

# Creates application directory
WORKDIR $APP_HOME

# Install dependencies
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y \
    build-essential \
    git \
    libpq-dev \
    libyaml-dev \
    netcat-openbsd && \
    rm -rf /var/lib/apt/lists/* /var/cache/apt/*

# Copy gem management files
COPY Gemfile Gemfile.lock ./

# Install gems (BUNDLE_WITHOUT empty to include development and test gems)
ENV BUNDLE_WITHOUT=""
RUN bundle install

# Copies the rest of the application code into the container
# This includes your LOCAL bin/docker-entrypoint script at build time.
# However, because of the volume .:/rails in docker-compose,
# the LOCAL script will be used at runtime.
COPY . .

# Make sure the entrypoint script copied to the image has execute permissions
# This is a good practice, even though the volume will override it with the local one.
RUN chmod +x /rails/bin/docker-entrypoint

# Exposes the default Rails port
EXPOSE 3000

# Sets the entrypoint that will run the script before the CMD
ENTRYPOINT ["/rails/bin/docker-entrypoint"] 

# Default command to start the Rails server (will be passed as "$@" to the entrypoint)
CMD ["./bin/rails", "server", "-b", "0.0.0.0"]